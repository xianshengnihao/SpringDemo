<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--bean的配置scope默认为scope="singleton"可以不写 singleton为单例 prototype为多例-->
    <!--<bean id="scopeBean" class="com.spring._05scope.ScopeBean" scope="singleton"/>-->
    <bean id="scopeBean" class="com.spring._05scope.ScopeBean" scope="prototype"/>

    <!--spring 通过bea容器创建对象时默认以对象的无参构造方法创建-->
    <bean id="creationBean" class="com.spring._06scope.CreationBean" />
    <!--通过类中的静态方法创建对象
    factory-method：返回对象的静态方法的名称-->
    <bean id="getCreation1" class="com.spring._06scope.CreationBeanFactory" factory-method="getCreation1"/>
    <!--通过类中的非静态方法创建对象   实例工厂方法，也就意味着该工厂可以创建多个不同的对象
    1、创建实例工厂的bean对象
    2、通过实例工厂的bean对象（factory-bean）和实例工厂中的普通方法（factory-method=）创建beean对象
    -->
    <bean id="creationBeanFactory" class="com.spring._06scope.CreationBeanFactory"/>
    <bean id="getCreation2" class="com.spring._06scope.CreationBean" factory-bean="creationBeanFactory" factory-method="getCreation2"/>

    <!--通过实现FactorBean接口创建对象-->
    <bean id="creationBean4" class="com.spring._06scope.CreationFactoryBean"/>



</beans>